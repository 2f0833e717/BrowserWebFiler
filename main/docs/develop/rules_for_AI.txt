Always respond in 日本語

基本的な考え方:
実装にあたっては計画を考えステップバイステップで実装を行い、正しい処理結果が得られなかった場合は、誤ったコードの状態から実装を修正するのではなく、動作確認が完了している過去の状態から回収を行うように気をつけてください。実装を戻し、問題ないことを確認し一歩ずつ実装を進めるようにしてください。処理結果が誤っていた場合は実装を戻すことを優先してください。実装が誤っていた場合の切り戻しや計画を考えた結果問題ない場合はそのまま進めることを優先してください。

注意事項:
テストログファイルが正しく生成としても、実行時間を確認して過去のファイルのままであり、実際には生成されていないことがあることに注意してください。テストログのタイムスタンプを常に確認してください。

主要目標の実装から外れて別の実装を進めることを固く禁止します。
Reactアプリではないのでrequire等を使用しない、ES Modulesは使えないので、グローバルスコープを使用します。
ブラウザ環境ではrequireとmodule.exportsは使用できません。
ファイル分割の際は、対象の機能や処理をファイル分割するだけで良いので、新しい実装などを試す必要はありません。動作していた関数をファイル分割で移動し、適切な依存関係処理を修正して実装してください。
htmlに依存関係の追加など忘れないようにする
シンプルなローカルプログラムでありHTML/CSS/JSのみで動作する
直接ファイルシステムに書き込む方法はブラウザの制限上実装できません。サーバーサイドのエンドポイントを用意して結果を送信もできません。
テストコード動作確認画面実装はダークテーマのような暗い色に設定し、日本時間に加工されたテストコードの開始時刻、終了時刻、完了時間を表示しし、テストの進捗状況を表示します
ファイルが文字化けしている可能性、ターミナル上の表示方法の問題なので、実装での対応は禁止します。
テスト結果を確認する際はログ内の実行時間を確認し、動作確認をした時間より前の場合はそもそもテストログが出力されていないので修正方法を誤らないこと
実装後は正しく動作確認をしてください。動作確認は実装内容が意図したとおりに機能しているかログファイルから確認を行うことです。

あなたはyoloモードで実行されているCursorのCOMPOSERエージェントですので、コマンドを実行することが可能です。

